<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chaoxing.osm.dao.vote.VoteWorkMapper" >
  <resultMap id="BaseResultMap" type="com.chaoxing.osm.bean.po.vote.VoteWork" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="vote_id" property="voteId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="auther" property="auther" jdbcType="VARCHAR" />
    <result column="pv" property="pv" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.chaoxing.osm.bean.po.vote.VoteWork" extends="BaseResultMap" >
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, vote_id, name, cover, auther, pv, create_time, update_time, is_delete
  </sql>
  <sql id="Blob_Column_List" >
    introduction
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_vote_work
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_vote_work
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chaoxing.osm.bean.po.vote.VoteWork" >
    insert into t_vote_work (id, vote_id, name, 
      cover, auther, pv, 
      create_time, update_time, is_delete, 
      introduction)
    values (#{id,jdbcType=INTEGER}, #{voteId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{auther,jdbcType=VARCHAR}, #{pv,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}, 
      #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chaoxing.osm.bean.po.vote.VoteWork" >
    insert into t_vote_work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="voteId != null" >
        vote_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="auther != null" >
        auther,
      </if>
      <if test="pv != null" >
        pv,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="voteId != null" >
        #{voteId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="auther != null" >
        #{auther,jdbcType=VARCHAR},
      </if>
      <if test="pv != null" >
        #{pv,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chaoxing.osm.bean.po.vote.VoteWork" >
    update t_vote_work
    <set >
      <if test="voteId != null" >
        vote_id = #{voteId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="auther != null" >
        auther = #{auther,jdbcType=VARCHAR},
      </if>
      <if test="pv != null" >
        pv = #{pv,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chaoxing.osm.bean.po.vote.VoteWork" >
    update t_vote_work
    set vote_id = #{voteId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      auther = #{auther,jdbcType=VARCHAR},
      pv = #{pv,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chaoxing.osm.bean.po.vote.VoteWork" >
    update t_vote_work
    set vote_id = #{voteId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      auther = #{auther,jdbcType=VARCHAR},
      pv = #{pv,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectList" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_vote_work
    where vote_id = #{voteId}
    and is_delete=0
    order by pv, create_time desc
  </select>
</mapper>